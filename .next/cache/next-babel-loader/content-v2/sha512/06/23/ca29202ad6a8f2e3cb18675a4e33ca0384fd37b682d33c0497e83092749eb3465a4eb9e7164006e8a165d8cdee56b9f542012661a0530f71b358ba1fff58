{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"/Users/Luke/Documents/dev/mern/foster-cooperative/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Luke/Documents/dev/mern/foster-cooperative/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Luke/Documents/dev/mern/foster-cooperative/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/Luke/Documents/dev/mern/foster-cooperative/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/Luke/Documents/dev/mern/foster-cooperative/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/Luke/Documents/dev/mern/foster-cooperative/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Luke/Documents/dev/mern/foster-cooperative/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _objectWithoutProperties from \"/Users/Luke/Documents/dev/mern/foster-cooperative/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/Luke/Documents/dev/mern/foster-cooperative/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper'; //import TableCell from '@material-ui/core/TableCell';\n\nimport { darken, fade, lighten } from '@material-ui/core/styles/colorManipulator'; //import Typography from '@material-ui/core/Typography';\n\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler'; //import classNames from 'clsx';\n\nimport { Scheduler, MonthView, Appointments, Toolbar, DateNavigator, AppointmentTooltip, AppointmentForm, EditRecurrenceMenu, Resources, DragDropProvider, ConfirmationDialog } from '@devexpress/dx-react-scheduler-material-ui'; //import ColorLens from '@material-ui/icons/ColorLens';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { owners } from '../../demo/demo-data/tasks';\nimport { appointments } from '../../demo/demo-data/tasks';\nvar resources = [{\n  fieldName: 'ownerId',\n  title: 'Owners',\n  instances: owners\n}];\n\nvar getBorder = function getBorder(theme) {\n  return \"1px solid \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68));\n};\n\nvar DayScaleCell = function DayScaleCell(props) {\n  return /*#__PURE__*/_jsx(MonthView.DayScaleCell, _objectSpread(_objectSpread({}, props), {}, {\n    style: {\n      textAlign: 'center',\n      fontWeight: 'bold'\n    }\n  }));\n};\n\nvar styles = function styles(theme) {\n  return {\n    cell: {\n      color: '#78909C!important',\n      position: 'relative',\n      userSelect: 'none',\n      verticalAlign: 'top',\n      padding: 0,\n      height: 100,\n      borderLeft: getBorder(theme),\n      '&:first-child': {\n        borderLeft: 'none'\n      },\n      '&:last-child': {\n        paddingRight: 0\n      },\n      'tr:last-child &': {\n        borderBottom: 'none'\n      },\n      '&:hover': {\n        backgroundColor: fade('#03B0b5', 0.15)\n      },\n      '&:focus': {\n        backgroundColor: fade('#03B0b5', 0.30),\n        outline: 0\n      }\n    },\n    content: {\n      display: 'flex',\n      justifyContent: 'center',\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      alignItems: 'center'\n    },\n    text: {\n      padding: '0.5em',\n      textAlign: 'center'\n    },\n    opacity: {\n      opacity: '0.5'\n    },\n    appointment: {\n      borderRadius: '10px',\n      '&:hover': {\n        opacity: 0.6\n      }\n    },\n    apptContent: {\n      '&>div>div': {\n        whiteSpace: 'normal !important',\n        lineHeight: 1.2\n      }\n    },\n    flexibleSpace: {\n      flex: 'none'\n    },\n    flexContainer: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    tooltipContent: {\n      padding: theme.spacing(3, 1),\n      paddingTop: 0,\n      backgroundColor: theme.palette.background.paper,\n      boxSizing: 'border-box',\n      width: '400px'\n    },\n    tooltipText: _objectSpread(_objectSpread({}, theme.typography.body2), {}, {\n      display: 'inline-block'\n    }),\n    title: _objectSpread(_objectSpread({}, theme.typography.h6), {}, {\n      color: theme.palette.text.secondary,\n      fontWeight: theme.typography.fontWeightBold,\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    }),\n    icon: {\n      color: theme.palette.action.active,\n      verticalAlign: 'middle'\n    },\n    circle: {\n      width: theme.spacing(4.5),\n      height: theme.spacing(4.5),\n      verticalAlign: 'super'\n    },\n    textCenter: {\n      textAlign: 'center'\n    },\n    dateAndTitle: {\n      lineHeight: 1.1\n    },\n    titleContainer: {\n      paddingBottom: theme.spacing(2)\n    },\n    container: {\n      paddingBottom: theme.spacing(1.5)\n    }\n  };\n}; // #FOLD_BLOCK\n// const CellBase = React.memo(({\n//   classes,\n//   startDate,\n//   formatDate,\n//   otherMonth,\n//   // #FOLD_BLOCK\n// }) => {\n//   //const iconId = Math.abs(Math.floor(Math.sin(startDate.getDate()) * 10) % 3);\n//   const isFirstMonthDay = startDate.getDate() === 1;\n//   const formatOptions = isFirstMonthDay\n//     ? { day: 'numeric', month: 'long' }\n//     : { day: 'numeric' };\n//   return (\n//     <TableCell\n//       tabIndex={0}\n//       className={classNames({\n//         [classes.cell]: true,\n//         [classes.opacity]: otherMonth,\n//       })}\n//     >\n//       <div className={classes.text}>\n//         {formatDate(startDate, formatOptions)}\n//       </div>\n//     </TableCell>\n//   );\n// });\n// const TimeTableCell = withStyles(styles, { name: 'Cell' })(CellBase);\n\n\nvar BooleanEditor = function BooleanEditor(props) {\n  return /*#__PURE__*/_jsx(AppointmentForm.BooleanEditor, _objectSpread(_objectSpread({}, props), {}, {\n    readOnly: true\n  }));\n};\n\nvar Appointment = withStyles(styles, {\n  name: 'Appointment'\n})(function (_ref) {\n  var classes = _ref.classes,\n      restProps = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  return /*#__PURE__*/_jsx(Appointments.Appointment, _objectSpread(_objectSpread({}, restProps), {}, {\n    className: classes.appointment\n  }));\n});\nvar AppointmentContent = withStyles(styles, {\n  name: 'AppointmentContent'\n})(function (_ref2) {\n  var classes = _ref2.classes,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\"]);\n\n  return /*#__PURE__*/_jsx(Appointments.AppointmentContent, _objectSpread(_objectSpread({}, restProps), {}, {\n    className: classes.apptContent\n  }));\n});\nvar FlexibleSpace = withStyles(styles, {\n  name: 'ToolbarRoot'\n})(function (_ref3) {\n  var classes = _ref3.classes,\n      restProps = _objectWithoutProperties(_ref3, [\"classes\"]);\n\n  return /*#__PURE__*/_jsx(Toolbar.FlexibleSpace, _objectSpread(_objectSpread({}, restProps), {}, {\n    className: classes.flexibleSpace,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classes.flexContainer,\n      children: /*#__PURE__*/_jsx(\"h1\", {\n        children: \"Community Calendar\"\n      })\n    })\n  }));\n});\n\nvar Calendar = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Calendar, _React$PureComponent);\n\n  var _super = _createSuper(Calendar);\n\n  // #FOLD_BLOCK\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: appointments,\n      currentDate: '2018-07-17',\n      addedAppointment: {},\n      appointmentChanges: {},\n      editingAppointment: undefined\n    };\n    _this.commitChanges = _this.commitChanges.bind(_assertThisInitialized(_this));\n    _this.changeAddedAppointment = _this.changeAddedAppointment.bind(_assertThisInitialized(_this));\n    _this.changeAppointmentChanges = _this.changeAppointmentChanges.bind(_assertThisInitialized(_this));\n    _this.changeEditingAppointment = _this.changeEditingAppointment.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"changeAddedAppointment\",\n    value: function changeAddedAppointment(addedAppointment) {\n      this.setState({\n        addedAppointment: addedAppointment\n      });\n    }\n  }, {\n    key: \"changeAppointmentChanges\",\n    value: function changeAppointmentChanges(appointmentChanges) {\n      this.setState({\n        appointmentChanges: appointmentChanges\n      });\n    }\n  }, {\n    key: \"changeEditingAppointment\",\n    value: function changeEditingAppointment(editingAppointment) {\n      this.setState({\n        editingAppointment: editingAppointment\n      });\n    } // #FOLD_BLOCK\n\n  }, {\n    key: \"commitChanges\",\n    value: function commitChanges(_ref4) {\n      var added = _ref4.added,\n          changed = _ref4.changed,\n          deleted = _ref4.deleted;\n      this.setState(function (state) {\n        var data = state.data;\n\n        if (added) {\n          var startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\n          data = [].concat(_toConsumableArray(data), [_objectSpread({\n            id: startingAddedId\n          }, added)]);\n        }\n\n        if (changed) {\n          data = data.map(function (appointment) {\n            return changed[appointment.id] ? _objectSpread(_objectSpread({}, appointment), changed[appointment.id]) : appointment;\n          });\n        }\n\n        if (deleted !== undefined) {\n          data = data.filter(function (appointment) {\n            return appointment.id !== deleted;\n          });\n        }\n\n        return {\n          data: data\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          currentDate = _this$state.currentDate,\n          data = _this$state.data,\n          addedAppointment = _this$state.addedAppointment,\n          appointmentChanges = _this$state.appointmentChanges,\n          editingAppointment = _this$state.editingAppointment;\n      return /*#__PURE__*/_jsx(Paper, {\n        value: \"\",\n        children: /*#__PURE__*/_jsxs(Scheduler, {\n          data: data,\n          children: [/*#__PURE__*/_jsx(ViewState, {\n            defaultCurrentDate: currentDate\n          }), /*#__PURE__*/_jsx(EditingState, {\n            onCommitChanges: this.commitChanges,\n            addedAppointment: addedAppointment,\n            onAddedAppointmentChange: this.changeAddedAppointment,\n            appointmentChanges: appointmentChanges,\n            onAppointmentChangesChange: this.changeAppointmentChanges,\n            editingAppointment: editingAppointment,\n            oneditingappointmentchange: this.changeeditingappointment\n          }), /*#__PURE__*/_jsx(MonthView, {\n            title: \"month\",\n            selectedDateFormat: \"{0:M}\",\n            selectedShortDateFormat: \"{0:M}\",\n            dayScaleCellComponent: DayScaleCell\n          }), /*#__PURE__*/_jsx(Toolbar, {\n            flexibleSpaceComponent: FlexibleSpace\n          }), /*#__PURE__*/_jsx(DateNavigator, {}), /*#__PURE__*/_jsx(EditRecurrenceMenu, {\n            value: \"1\"\n          }), /*#__PURE__*/_jsx(ConfirmationDialog, {}), /*#__PURE__*/_jsx(Appointments, {\n            appointmentComponent: Appointment,\n            appointmentContentComponent: AppointmentContent\n          }), /*#__PURE__*/_jsx(Resources, {\n            data: resources\n          }), /*#__PURE__*/_jsx(AppointmentTooltip, {\n            showCloseButton: true,\n            showDeleteButton: true,\n            showOpenButton: true\n          }), /*#__PURE__*/_jsx(AppointmentForm, {\n            booleanEditorComponent: BooleanEditor\n          }), /*#__PURE__*/_jsx(DragDropProvider, {})]\n        })\n      });\n    }\n  }]);\n\n  return Calendar;\n}(React.PureComponent);\n\nexport { Calendar as default };","map":null,"metadata":{},"sourceType":"module"}